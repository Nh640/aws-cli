name: Build action

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '15 3 * * *'  # every day at 03:15 (just wanted to avoid midnight)

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
    permissions:
      id-token: write
      packages: write
      contents: read
      security-events: write

    steps:
      - name: Generate snapshot date
        id: snapshot-date
        run: |
          echo ::set-output name=date::$(date -u +%Y%m%d)
          echo ::set-output name=epoch::$(date -u +%s)
        shell: bash

      - uses: actions/checkout@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Install qemu-user
        run: sudo apt-get install -y qemu-user

      - uses: sigstore/cosign-installer@main
      - uses: chainguard-dev/actions/setup-melange@main
      - uses: chainguard-dev/actions/melange-keygen@main

      - name: Build py3-certifi pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-certifi.melange.yaml
          source-dir: py3-certifi
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-distro pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-distro.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-ruamel pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-ruamel.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-prompt_toolkit pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-prompt_toolkit.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-wcwidth pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-wcwidth.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-typing-extensions pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-typing-extensions.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-semantic-version pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-semantic-version.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-setuptools-rust pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-setuptools-rust.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-cffi pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-cffi.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-cparser pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-cparser.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-cryptography pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-cryptography.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-c-common pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-c-common.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-checksums pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-checksums.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-c-sdkutils pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-c-sdkutils.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build s2n-tls pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: s2n-tls.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-c-cal pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-c-cal.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-c-compression pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-c-compression.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-c-io pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-c-io.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-c-http pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-c-http.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-c-mqtt pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-c-mqtt.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64
          
      - name: Build aws-c-auth pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-c-auth.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-c-event-stream pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-c-event-stream.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64
          
      - name: Build aws-c-s3 pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-c-s3.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-crt-cpp pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-crt-cpp.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build py3-awscrt pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: py3-awscrt.melange.yaml
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - name: Build aws-cli pkg
        uses: chainguard-dev/actions/melange-build-pkg@main
        with:
          config: aws-cli.melange.yaml
          source-dir: aws-cli
          sign-with-key: true
          signing-key-path: ${{ github.workspace }}/melange.rsa
          archs: x86_64

      - uses: chainguard-images/actions/apko-publish@e61cb0631c83e84cadc21337be090ad06bf05da2
        id: apko
        with:
          config: latest.apko.yaml
          tag: ghcr.io/${{ github.repository }}:latest
          keyring-append: /github/workspace/melange.rsa.pub
          source-date-epoch: ${{ steps.snapshot-date.outputs.epoch }}

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - shell: bash
        run: |
          COSIGN_EXPERIMENTAL=true cosign sign ${{ steps.apko.outputs.digest }} --yes
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.apko.outputs.digest }}
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
